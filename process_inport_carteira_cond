<?php
// process_inport_carteira_cond.php

require '../vendor/autoload.php';

require_once '../config/database.php';

use PhpOffice\PhpSpreadsheet\IOFactory;

// Função para ler o arquivo Excel e retornar os dados como um array
function lerExcel($arquivo) {
    $planilha = IOFactory::load($arquivo);
    $dados = $planilha->getActiveSheet()->toArray();
    return $dados;
}

// Função para verificar e adicionar/atualizar os dados no banco de dados
function atualizarDados($dados) {
    global $conn;

    // Percorre os dados da planilha (pulando a primeira linha que contém os cabeçalhos)
    for ($i = 1; $i < count($dados); $i++) {
        $linha = $dados[$i];

        // Mapear os dados da linha da planilha para as colunas do banco de dados
        $cod_cond = $linha[12];
        $anomes = $linha[0];
        $diretoria_sp = $linha[1];
        $segmento = $linha[2];
        $div_reg_carteira = $linha[3];
        $regional_carteira = $linha[4];
        $gerente_area = $linha[5];
        $ggp = $linha[6];
        $ddd = $linha[7];
        $cidade = $linha[8];
        $cnl_at = $linha[9];
        $parceiro = $linha[10];
        $insumo = $linha[11];
        $bairro_correios = $linha[13];
        $tipo_predio = $linha[14];
        $nome_condominio = $linha[15];
        $endereco = $linha[16];
        $numero = $linha[17];
        $cep = $linha[18];
        $status_cond = $linha[19];
        $esteira = $linha[20];
        $motivo_agrup = $linha[21];
        $motivo = $linha[22];
        $dt_esteira = $linha[23];
        $dt_libcomercial = $linha[24];
        $anomes_lib_cond = $linha[25];
        $ano_lib_cond = $linha[26];
        $fl_alivio = $linha[27];
        $id_alivio = $linha[28];
        $esteira_alivio = $linha[29];
        $motivo_esteira_alivio = $linha[30];
        $dt_lib_alivio = $linha[31];
        $anomes_lib_alivio = $linha[32];
        $rede_vivo = $linha[33];
        $codlog = $linha[34];
        $tecnologia = $linha[35];
        $apartamentos = $linha[36];
        $torres = $linha[37];
        $capacidade = $linha[38];
        $ocupado = $linha[39];
        $disponibilidade = $linha[40];
        $ocupacao = $linha[41];
        $faixa_aging_lib = $linha[42];
        $faixa_disponibilidade = $linha[43];
        $faixa_ocupacao = $linha[44];
        $fl_cortesia = $linha[45];
        $fl_fibrasim = $linha[46];
        $dt_imput_fibrasim = $linha[47];
        $dt_vendas = $linha[48];
        $fl_lib_com_atencao = $linha[49];
        $fl_venda_6meses_dono = $linha[50];
        $fl_zero_vendas_pap_co = $linha[51];
        $fl_zero_vendas_total = $linha[52];
        $vl_6meses_dono = $linha[53];
        $vl_6meses_tt_pap_co = $linha[54];
        $vl_6meses_revendas = $linha[55];
        $vl_6meses_lojas_proprias = $linha[56];
        $vl_6meses_remotos = $linha[57];
        $vl_6meses_total = $linha[58];
        $fl_lib_com_atencao_2 = $linha[59];
        $dt_pruma = $linha[60];
        
        // Verificar se o registro já existe no banco de dados
        $sql = "SELECT COD_COND FROM carteira_cond WHERE COD_COND = ?";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param('s', $cod_cond);
        $stmt->execute();
        $result = $stmt->get_result();
        $registroExistente = $result->fetch_assoc();

        if ($registroExistente) {
            // Registro existe, atualizar os dados
            $sqlUpdate = "UPDATE carteira_cond SET 
                ANOMES = ?, DIRETORIA_SP = ?, SEGMENTO = ?, DIV_REG_CARTEIRA = ?, REGIONAL_CARTEIRA = ?, GERENTE_AREA = ?, 
                GGP = ?, DDD = ?, CIDADE = ?, CNL_AT = ?, PARCEIRO = ?, INSUMO = ?, BAIRRO_CORREIOS = ?, TIPO_PREDIO = ?, 
                NOME_CONDOMINIO = ?, ENDEREÇO = ?, NUMERO = ?, CEP = ?, STATUS_COND = ?, ESTEIRA = ?, MOTIVO_AGRUP = ?, 
                MOTIVO = ?, DT_ESTEIRA = ?, DT_LIBCOMERCIAL = ?, ANOMES_LIB_COND = ?, ANO_LIB_COND = ?, FL_ALIVIO = ?, 
                ID_ALIVIO = ?, ESTEIRA_ALIVIO = ?, MOTIVO_ESTEIRA_ALIVIO = ?, DT_LIB_ALIVIO = ?, ANOMES_LIB_ALIVIO = ?, 
                REDE_VIVO = ?, CODLOG = ?, TECNOLOGIA = ?, APARTAMENTOS = ?, TORRES = ?, CAPACIDADE = ?, OCUPADO = ?, 
                DISPONIBILIDADE = ?, OCUPAÇÃO = ?, FAIXA_AGING_LIB = ?, FAIXA_DISPONIBILIDADE = ?, FAIXA_OCUPACAO = ?, 
                FL_CORTESIA = ?, FL_FIBRASIM = ?, DT_IMPUT_FIBRASIM = ?, DT_VENDAS = ?, FL_LIB_COM_ATENCAO = ?, 
                FL_VENDA_6MESES_DONO = ?, FL_ZERO_VENDAS_PAP_CO = ?, FL_ZERO_VENDAS_TOTAL = ?, VL_6MESES_DONO = ?, 
                VL_6MESES_TT_PAP_CO = ?, VL_6MESES_REVENDAS = ?, VL_6MESES_LOJAS_PROPRIAS = ?, VL_6MESES_REMOTOS = ?, 
                VL_6MESES_TOTAL = ?, FL_LIB_COM_ATENCAO_2 = ?, DT_PRUMA = ? 
                WHERE COD_COND = ?";
            $stmtUpdate = $conn->prepare($sqlUpdate);
            $stmtUpdate->bind_param('sssssssssssssssssssssssssssssssssssssssssssssssssssss', 
                $anomes, $diretoria_sp, $segmento, $div_reg_carteira, $regional_carteira, $gerente_area, $ggp, $ddd, 
                $cidade, $cnl_at, $parceiro, $insumo, $bairro_correios, $tipo_predio, $nome_condominio, $endereco, 
                $numero, $cep, $status_cond, $esteira, $motivo_agrup, $motivo, $dt_esteira, $dt_libcomercial, 
                $anomes_lib_cond, $ano_lib_cond, $fl_alivio, $id_alivio, $esteira_alivio, $motivo_esteira_alivio, 
                $dt_lib_alivio, $anomes_lib_alivio, $rede_vivo, $codlog, $tecnologia, $apartamentos, $torres, 
                $capacidade, $ocupado, $disponibilidade, $ocupacao, $faixa_aging_lib, $faixa_disponibilidade, 
                $faixa_ocupacao, $fl_cortesia, $fl_fibrasim, $dt_imput_fibrasim, $dt_vendas, $fl_lib_com_atencao, 
                $fl_venda_6meses_dono, $fl_zero_vendas_pap_co, $fl_zero_vendas_total, $vl_6meses_dono, $vl_6meses_tt_pap_co, 
                $vl_6meses_revendas, $vl_6meses_lojas_proprias, $vl_6meses_remotos, $vl_6meses_total, 
                $fl_lib_com_atencao_2, $dt_pruma, $cod_cond);
            $stmtUpdate->execute();
        } else {
            // Registro não existe, inserir novo registro
            $insertQuery = "INSERT INTO carteira_cond (
                ANOMES, DIRETORIA_SP, SEGMENTO, DIV_REG_CARTEIRA, REGIONAL_CARTEIRA, GERENTE_AREA, GGP, DDD, CIDADE, CNL_AT, PARCEIRO, INSUMO, BAIRRO_CORREIOS, COD_COND, TIPO_PREDIO, NOME_CONDOMINIO, ENDEREÇO, NUMERO, CEP, STATUS_COND, ESTEIRA, MOTIVO_AGRUP, MOTIVO, DT_ESTEIRA, DT_LIBCOMERCIAL, ANOMES_LIB_COND, ANO_LIB_COND, FL_ALIVIO, ID_ALIVIO, ESTEIRA_ALIVIO, MOTIVO_ESTEIRA_ALIVIO, DT_LIB_ALIVIO, ANOMES_LIB_ALIVIO, REDE_VIVO, CODLOG, TECNOLOGIA, APARTAMENTOS, TORRES, CAPACIDADE, OCUPADO, DISPONIBILIDADE, OCUPAÇÃO, FAIXA_AGING_LIB, FAIXA_DISPONIBILIDADE, FAIXA_OCUPACAO, FL_CORTESIA, FL_FIBRASIM, DT_IMPUT_FIBRASIM, DT_VENDAS, FL_LIB_COM_ATENCAO, FL_VENDA_6MESES_DONO, FL_ZERO_VENDAS_PAP_CO, FL_ZERO_VENDAS_TOTAL, VL_6MESES_DONO, VL_6MESES_TT_PAP_CO, VL_6MESES_REVENDAS, VL_6MESES_LOJAS_PROPRIAS, VL_6MESES_REMOTOS, VL_6MESES_TOTAL, FL_LIB_COM_ATENCAO_DOIS, DT_PRUMA
                ) VALUES (
                :ANOMES, :DIRETORIA_SP, :SEGMENTO, :DIV_REG_CARTEIRA, :REGIONAL_CARTEIRA, :GERENTE_AREA, :GGP, :DDD, :CIDADE, :CNL_AT, :PARCEIRO, :INSUMO, :BAIRRO_CORREIOS, :COD_COND, :TIPO_PREDIO, :NOME_CONDOMINIO, :ENDEREÇO, :NUMERO, :CEP, :STATUS_COND, :ESTEIRA, :MOTIVO_AGRUP, :MOTIVO, :DT_ESTEIRA, :DT_LIBCOMERCIAL, :ANOMES_LIB_COND, :ANO_LIB_COND, :FL_ALIVIO, :ID_ALIVIO, :ESTEIRA_ALIVIO, :MOTIVO_ESTEIRA_ALIVIO, :DT_LIB_ALIVIO, :ANOMES_LIB_ALIVIO, :REDE_VIVO, :CODLOG, :TECNOLOGIA, :APARTAMENTOS, :TORRES, :CAPACIDADE, :OCUPADO, :DISPONIBILIDADE, :OCUPAÇÃO, :FAIXA_AGING_LIB, :FAIXA_DISPONIBILIDADE, :FAIXA_OCUPACAO, :FL_CORTESIA, :FL_FIBRASIM, :DT_IMPUT_FIBRASIM, :DT_VENDAS, :FL_LIB_COM_ATENCAO, :FL_VENDA_6MESES_DONO, :FL_ZERO_VENDAS_PAP_CO, :FL_ZERO_VENDAS_TOTAL, :VL_6MESES_DONO, :VL_6MESES_TT_PAP_CO, :VL_6MESES_REVENDAS, :VL_6MESES_LOJAS_PROPRIAS, :VL_6MESES_REMOTOS, :VL_6MESES_TOTAL, :FL_LIB_COM_ATENCAO_DOIS, :DT_PRUMA)";
            $stmt = $pdo->prepare($insertQuery);
        }

        // Vincular os parâmetros
        $stmt->bindParam(':ANOMES', $row[0]);
        $stmt->bindParam(':DIRETORIA_SP', $row[1]);
        $stmt->bindParam(':SEGMENTO', $row[2]);
        $stmt->bindParam(':DIV_REG_CARTEIRA', $row[3]);
        $stmt->bindParam(':REGIONAL_CARTEIRA', $row[4]);
        $stmt->bindParam(':GERENTE_AREA', $row[5]);
        $stmt->bindParam(':GGP', $row[6]);
        $stmt->bindParam(':DDD', $row[7]);
        $stmt->bindParam(':CIDADE', $row[8]);
        $stmt->bindParam(':CNL_AT', $row[9]);
        $stmt->bindParam(':PARCEIRO', $row[10]);
        $stmt->bindParam(':INSUMO', $row[11]);
        $stmt->bindParam(':COD_COND', $row[12]);
        $stmt->bindParam(':TIPO_PREDIO', $row[13]);
        $stmt->bindParam(':NOME_CONDOMINIO', $row[14]);
        $stmt->bindParam(':ENDEREÇO', $row[15]);
        $stmt->bindParam(':NUMERO', $row[16]);
        $stmt->bindParam(':CEP', $row[17]);
        $stmt->bindParam(':STATUS_COND', $row[18]);
        $stmt->bindParam(':ESTEIRA', $row[19]);
        $stmt->bindParam(':MOTIVO_AGRUP', $row[20]);
        $stmt->bindParam(':MOTIVO', $row[21]);
        $stmt->bindParam(':DT_ESTEIRA', $row[22]);
        $stmt->bindParam(':DT_LIBCOMERCIAL', $row[23]);
        $stmt->bindParam(':ANOMES_LIB_COND', $row[24]);
        $stmt->bindParam(':ANO_LIB_COND', $row[25]);
        $stmt->bindParam(':FL_ALIVIO', $row[26]);
        $stmt->bindParam(':ID_ALIVIO', $row[27]);
        $stmt->bindParam(':ESTEIRA_ALIVIO', $row[28]);
        $stmt->bindParam(':MOTIVO_ESTEIRA_ALIVIO', $row[29]);
        $stmt->bindParam(':DT_LIB_ALIVIO', $row[30]);
        $stmt->bindParam(':ANOMES_LIB_ALIVIO', $row[31]);
        $stmt->bindParam(':REDE_VIVO', $row[32]);
        $stmt->bindParam(':CODLOG', $row[33]);
        $stmt->bindParam(':TECNOLOGIA', $row[34]);
        $stmt->bindParam(':APARTAMENTOS', $row[35]);
        $stmt->bindParam(':TORRES', $row[36]);
        $stmt->bindParam(':CAPACIDADE', $row[37]);
        $stmt->bindParam(':OCUPADO', $row[38]);
        $stmt->bindParam(':DISPONIBILIDADE', $row[39]);
        $stmt->bindParam(':OCUPAÇÃO', $row[40]);
        $stmt->bindParam(':FAIXA_AGING_LIB', $row[41]);
        $stmt->bindParam(':FAIXA_DISPONIBILIDADE', $row[42]);
        $stmt->bindParam(':FAIXA_OCUPACAO', $row[43]);
        $stmt->bindParam(':FL_CORTESIA', $row[44]);
        $stmt->bindParam(':FL_FIBRASIM', $row[45]);
        $stmt->bindParam(':DT_IMPUT_FIBRASIM', $row[46]);
        $stmt->bindParam(':DT_VENDAS', $row[47]);
        $stmt->bindParam(':FL_LIB_COM_ATENCAO', $row[48]);
        $stmt->bindParam(':FL_VENDA_6MESES_DONO', $row[49]);
        $stmt->bindParam(':FL_ZERO_VENDAS_PAP_CO', $row[50]);
        $stmt->bindParam(':FL_ZERO_VENDAS_TOTAL', $row[51]);
        $stmt->bindParam(':VL_6MESES_DONO', $row[52]);
        $stmt->bindParam(':VL_6MESES_TT_PAP_CO', $row[53]);
        $stmt->bindParam(':VL_6MESES_REVENDAS', $row[54]);
        $stmt->bindParam(':VL_6MESES_LOJAS_PROPRIAS', $row[55]);
        $stmt->bindParam(':VL_6MESES_REMOTOS', $row[56]);
        $stmt->bindParam(':VL_6MESES_TOTAL', $row[57]);
        $stmt->bindParam(':FL_LIB_COM_ATENCAO_DOIS', $row[58]);
        $stmt->bindParam(':DT_PRUMA', $row[59]);

        $stmt->execute();
    }
}

echo "Dados importados com sucesso!";
} else {
echo "Por favor, selecione um arquivo para upload.";
}
?>